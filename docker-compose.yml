services:
  db:
    build: ./postgre
    container_name: pashield_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - pashield_data:/var/lib/postgresql/data
      - ./postgre/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file:
      - .env
    networks:
      - pashield_network

  adminer:
    container_name: pashield_db_adminer
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "127.0.0.1:8083:8080"
    networks:
      - pashield_network

  api:
    build: ./api
    container_name: pashield_api
    restart: always
    ports:
      - "5001:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./api/app:/app/app
      - ./.env:/app/.env
    networks:
      - pashield_network

networks:
  pashield_network:
    driver: bridge
    name: pashield_network

volumes:
  pashield_data:
    name: pashield_data